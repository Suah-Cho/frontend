name: Build and Push Image to ACR - DEV

on:
    push:
        branches:
            - dev

jobs:
    build:
        runs-on: ubuntu-latest

        steps:
            - name: Checkout repository
              uses: actions/checkout@v2

            - name: Set up Docker Buildx
              uses: docker/setup-buildx-action@v1

            - name: Version
              id: version-tag
              run: |
                  VERSION=$(git describe --tags --abbrev=0)
                  if [ -z "$VERSION" ]; then
                      VERSION="0.0.0"
                  fi
                  IFS='.' read -r -a VERSION_PARTS <<< "$VERSION"
                  PATCH_VERSION=$((VERSION_PARTS[2]+1))
                  NEW_VERSION="${VERSION_PARTS[0]}.${VERSION_PARTS[1]}.$PATCH_VERSION"
                  echo "VERSION=$NEW_VERSION" >> $GITHUB_ENV

            - name: Login to Azure
              uses: azure/docker-login@v1
              with:
                  login-server: ${{ secrets.ACR_LOGIN_SERVER }}
                  username: ${{ secrets.ACR_USERNAME }}
                  password: ${{ secrets.ACR_PASSWORD }}
            
            - name: Build and Push Image to ACR
              run: |
                  docker build -t ${{ secrets.ACR_LOGIN_SERVER }}/frontend:${{ env.VERSION }} .
                  docker push ${{ secrets.ACR_LOGIN_SERVER }}/frontend:${{ env.VERSION }}

            - name: Chekcout cicd repository
              uses: actions/checkout@v2
              with:
                repository: 'Suah-Cho/cicd'
                ref: dev
                token: ${{ secrets.PAT }}
                path: cicd
            
            - name: Update Image Manifest
              run: |
                sed -i '/frontend:/,/backend:/{s|image: arctestsa.azurecr.io/frontend:.*|image: arctestsa.azurecr.io/frontend:'"${{ env.VERSION }}"'|}' cicd/resources/docker-compose.yml
                cat cicd/resources/docker-compose.yml
            
            - name: Commit and Push Image Manifest File
              run: |
                cd cicd
                git config user.email "${{ secrets.USEREMAIL }}"
                git config user.name "${{ secrets.USERNAME }}"
                git commit -am "Update frontend image - ${{ env.VERSION }}"
                git push origin dev